tx_cicbase_pi1 {
    settings {
	}
	persistence {
	}
	view {
	}
}

config.tx_extbase{
	objects {
		TYPO3\CMS\Extbase\Persistence\Generic\QueryFactory {
			className = CIC\Cicbase\Persistence\QueryFactory
		}
		TYPO3\CMS\Extbase\Persistence\Generic\QueryFactoryInterface {
			className = CIC\Cicbase\Persistence\QueryFactory
		}
	}
}

config.tx_extbase.persistence.classes {
	CIC\Cicbase\Domain\Model\FileReference {
		mapping {
			tableName = sys_file_reference
		}
	}
#	TYPO3\CMS\Extbase\Domain\Model\FileReference {
#		subclasses {
#			CIC\Cicbase\Domain\Model\FileReference = CIC\Cicbase\Domain\Model\FileReference
#		}
#	}
	CIC\Cicbase\Domain\Model\File {
		mapping {
			columns {
				crdate.MapOnProperty = crdate
				tstamp.MapOnProperty = tstamp
			}
		}
	}
    CIC\Cicbase\Domain\Model\DigitalAsset {
	    mapping {
		    tableName = tx_dam
	    }
    }
    CIC\Cicbase\Domain\Model\State {
        mapping {
            tableName = static_country_zones
            columns {
                zn_name_en.mapOnProperty = name
                zn_code.mapOnProperty = shortName
            }
        }
    }
    CIC\Cicbase\Domain\Model\Zip {
        mapping {
            tableName = tx_cicbase_zipcodes
            columns {
                latitude.mapOnProperty = lat
                longitude.mapOnProperty = lng
            }
        }
    }
}

cicbase_mimes {
	image {
		bmp = image/bmp
		gif = image/gif
		jpeg = image/jpeg,image/jpg
		jpg = image/jpeg,image/jpg
		png = image/png
	}
	document {
		doc = application/msword
		docx = application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/zip
		htm = text/html
		html = text/html
		mht = message/rfc822
		numbers = application/x-iwork-numbers-sffnumbers
		pages = application/x-iwork-pages-sffpages
		pdf = application/pdf,binary/octet-stream
		ppt = application/mspowerpoint,application/vnd.ms-powerpoint,application/vnd.ms-office
		pptx = application/vnd.openxmlformats-officedocument.presentationml.presentation,application/zip
		pub = application/x-mspublisher
		rtf = application/rtf
		tif = image/tiff
		txt = text/plain
		wpd = application/wordperfect
		wps = application/vnd.ms-works,application/vnd.ms-office
		xls = application/excel,application/vnd.ms-excel,application/vnd.ms-office
		xlsx = application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/zip
		xml = text/xml
		zip = application/x-compressed
	}
	all {
		bmp = image/bmp
		gif = image/gif
		jpeg = image/jpeg,image/jpg
		jpg = image/jpeg,image/jpg
		png = image/png
		doc = application/msword
		docx = application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/zip
		htm = text/html
		html = text/html
		mht = message/rfc822
		numbers = application/x-iwork-numbers-sffnumbers
		pages = application/x-iwork-pages-sffpages
		pdf = application/pdf,binary/octet-stream
		ppt = application/mspowerpoint,application/vnd.ms-powerpoint,application/vnd.ms-office
		pptx = application/vnd.openxmlformats-officedocument.presentationml.presentation,application/zip
		pub = application/x-mspublisher
		rtf = application/rtf
		tif = image/tiff
		txt = text/plain
		wpd = application/wordperfect
		wps = application/vnd.ms-works,application/vnd.ms-office
		xls = application/excel,application/vnd.ms-excel,application/vnd.ms-office
		xlsx = application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/zip
		xml = text/xml
		zip = application/x-compressed
	}
}

# A short parsefunc for headers and things where you don't want a bunch of paragraph tags.
lib.parseFunc_title < lib.parseFunc_RTE
lib.parseFunc_title.nonTypoTagStdWrap.encapsLines >